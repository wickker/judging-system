// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("VITE_DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id                Int           @id @default(autoincrement()) @db.UnsignedInt
  email             String        @unique
  hashedPassword    String
  clientToken       String        @unique
  clientTokenExpiry DateTime
  createdAt         DateTime      @default(now())
  updatedAt         DateTime?     @updatedAt
  deletedAt         DateTime?
  Competition       Competition[]
}

model Judge {
  id            Int            @id @default(autoincrement()) @db.UnsignedInt
  name          String
  email         String
  code          String?
  codeExpiry    DateTime?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime?      @updatedAt
  deletedAt     DateTime?
  sessionJudges SessionJudge[]
}

model Competition {
  id          Int          @id @default(autoincrement()) @db.UnsignedInt
  name        String
  year        Int
  sessions    Session[]
  user        User         @relation(fields: [userId], references: [id])
  userId      Int
  createdAt   DateTime     @default(now())
  updatedAt   DateTime?    @updatedAt
  deletedAt   DateTime?
  competitors Competitor[]

  @@index([userId])
}

model Session {
  id            Int            @id @default(autoincrement()) @db.UnsignedInt
  name          String
  date          DateTime
  scoringFormat ScoringFormat  @default(AVERAGE)
  competitionId Int
  competition   Competition    @relation(fields: [competitionId], references: [id])
  createdAt     DateTime       @default(now())
  updatedAt     DateTime?      @updatedAt
  deletedAt     DateTime?
  sessionJudges SessionJudge[]
  competitors   Competitor[]

  @@index([competitionId])
}

model SessionJudge {
  id        Int       @id @default(autoincrement()) @db.UnsignedInt
  session   Session   @relation(fields: [sessionId], references: [id])
  sessionId Int
  judge     Judge     @relation(fields: [judgeId], references: [id])
  judgeId   Int
  position  String
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?

  @@index([sessionId])
  @@index([judgeId])
}

model Competitor {
  id             Int         @id @default(autoincrement()) @db.UnsignedInt
  uniqueId       String
  session        Session     @relation(fields: [sessionId], references: [id])
  sessionId      Int
  competition    Competition @relation(fields: [competitionId], references: [id])
  competitionId  Int
  sequenceNumber Int
  eventName      String
  judgesScores   Json?
  penalties      Int?
  finalScore     Int?
  createdAt      DateTime    @default(now())
  updatedAt      DateTime?   @updatedAt
  deletedAt      DateTime?

  @@index([sessionId])
  @@index([competitionId])
}

enum ScoringFormat {
  AVERAGE
  RHYTHMIC_GYMNASTICS_FIG_2022_2024
}
